{"version":3,"sources":["Components/Edit.js","Components/Text.js","Components/Email.js","Components/Phone.js","Components/General.js","Components/DateRange.js","Components/EducationForm.js","Components/Education.js","Components/PracticalForm.js","Components/Practical.js","App.js","index.js"],"names":["Edit","props","handleChange","bind","this","toggle","current","className","type","onClick","value","React","Component","Text","state","e","setState","target","editable","length","label","display","placeholder","cols","rows","onChange","maxLength","Email","valid","validate","email","test","Phone","areaCodeValue","exchangeCodeValue","lineCodeValue","code","number","area","exchange","line","areaEl","excEl","lineEl","event","General","isEditable","edit","console","log","id","DateRange","monthStartValue","yearStartValue","monthEndValue","yearEndValue","handleMonthStartChange","handleYearStartChange","handleMonthEndChange","handleYearEndChange","handleCheck","checked","startMonth","startYear","endMonth","endYear","formatYear","validStart","validEnd","startDate","Date","endDate","getMonth","monthStart","yearStart","monthEnd","yearEnd","monthEl","yearEl","defaultValue","min","max","EducationForm","remove","key","uuid","preventDefault","removeButton","Education","addNew","addedSections","next","update","filter","section","toString","fieldsets","map","index","addButton","PracticalForm","Practical","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008f22b9.chunk.js","sourcesContent":["import React from 'react'\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange() {\n        this.props.toggle(!this.props.current); //toggle prop contains the handleChange method from Parent section\n    }\n    \n    render() {\n        const editable = this.props.current;\n        if (editable) {\n            return (\n                <div className=\"Save\">\n                  <input type=\"button\" onClick={this.handleChange} value=\"Save\"></input>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"Edit\">\n                  <input type=\"button\" onClick={this.handleChange} value=\"Edit\"></input>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Edit;\n","import React from 'react'\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange(e) {\n        this.setState({value: (e.target.value)});\n    }\n\n    render() {\n        const editable = this.props.editable; //true or false\n        const type = this.props.type;\n        const length = this.props.length;\n        const label = this.props.label;\n        const display = this.props.display;\n        const placeholder = this.props.placeholder;\n        const cols = this.props.cols;\n        const rows = this.props.rows;\n        const value = this.state.value;\n        if (editable) {\n            if (type === 'text') {\n                return (\n                    <div className=\"Text editable\">\n                        <label>{label}</label>\n                        <input \n                            className={display} \n                            type={type} \n                            value={value} \n                            onChange={this.handleChange} \n                            placeholder={placeholder} \n                            maxLength={length}></input>\n                    </div>\n                );\n            } else if (type === 'textarea') {\n                return (\n                    <div className=\"Textarea editable\">\n                        <label>{label}</label>\n                        <textarea\n                            className={display}\n                            value={value}\n                            onChange={this.handleChange}\n                            placeholder={placeholder}\n                            cols={cols}\n                            rows={rows}\n                            maxLength={length}></textarea>\n                    </div>\n                );\n            }\n        } else {\n            if (!value) {\n                return (\n                    <div className=\"Text notEditable\">\n                        <label>{label}</label>\n                        <p className=\"italic\">{placeholder}</p>\n                    </div>  \n                );\n            } else {\n                return (\n                    <div className=\"Text notEditable\">\n                        <label>{label}</label>\n                        <p>{value}</p>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default Text;","import React from 'react'\n\nclass Email extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            valid: true,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange(e) {\n        this.validate(e.target.value);\n        this.setState({value: (e.target.value)});\n    }\n\n    validate(email) {\n        const pattern = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n        const valid = pattern.test(email);\n        this.setState({valid: valid});\n    }\n\n    render() {\n        const editable = this.props.editable; //true or false\n        const label = this.props.label;\n        const display = this.props.display;\n        const placeholder = this.props.placeholder;\n        const value = this.state.value;\n        const valid = this.state.valid;\n        if (editable) {\n            return (\n                <div className=\"Email editable\">\n                    <label>{label}</label>\n                    <input className={display} type=\"text\" value={value} onChange={this.handleChange} placeholder={placeholder}></input>\n                    <div className=\"error\">{valid ? \"\" : \"Enter a valid email address\"}</div>\n                </div>\n            );\n        } else {\n            if (!value) {\n                return (\n                    <div className=\"Email notEditable\">\n                        <label>{label}</label>\n                        <p className=\"italic\">{placeholder}</p>\n                    </div>  \n                );\n            } else {\n                return (\n                    <div className=\"Email notEditable\">\n                        <label>{label}</label>\n                        <p>{value}</p>\n                    </div>\n                );\n            }\n        }\n    }\n}\n\nexport default Email;","import React from 'react'\n\nclass Phone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            areaCodeValue: \"\",\n            exchangeCodeValue: \"\",\n            lineCodeValue: \"\",\n            valid: true,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    \n    handleChange(e, code) {\n        this.validate(e.target.value);\n        this.setState({[code + 'CodeValue']: (e.target.value)});\n    }\n\n    validate(number) {\n        const pattern = /^[0-9]*$/;\n        const valid = pattern.test(number);\n        this.setState({valid: valid});\n    }\n\n    render() {\n        const editable = this.props.editable; //true or false\n        const label = this.props.label;\n        const display = this.props.display;\n        const area = this.state.areaCodeValue;\n        const exchange = this.state.exchangeCodeValue;\n        const line = this.state.lineCodeValue;\n        const areaEl = <span className=\"italic\">(Area)</span>;\n        const excEl = <span className=\"italic\">&nbsp;###-</span>;\n        const lineEl = <span className=\"italic\">####</span>\n        const valid = this.state.valid;\n        if (editable) {\n            return (\n                <div className=\"Phone editable\">\n                    <label>{label}</label>\n                    <fieldset>\n                            <input className=\"inline\" type=\"text\" value={area} maxLength=\"3\" placeholder=\"Area\" onChange={(event) => this.handleChange(event, \"area\")}></input>\n                            <input className=\"inline\" type=\"text\" value={exchange} maxLength=\"3\" placeholder=\"###\" onChange={(event) => this.handleChange(event, \"exchange\")}></input>\n                            <input className=\"inline\" type=\"text\" value={line} maxLength=\"4\" placeholder=\"####\" onChange={(event) => this.handleChange(event, \"line\")}></input>\n                    </fieldset>\n                    <div className=\"error\">{valid ? \"\" : \"Enter a valid phone number\"}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"Phone notEditable\">\n                    <label>{label}</label>\n                    <p className={display}>{area ? \"(\" + area + \") \" : areaEl}</p>\n                    <p className={display}>{exchange ? exchange + \"-\" : excEl}</p>\n                    <p className={display}>{line ? line : lineEl}</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Phone;","import React from 'react'\nimport Edit from './Edit'\nimport Text from './Text'\nimport Email from './Email'\nimport Phone from './Phone'\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            isEditable: true\n        }\n    }\n    handleChange(edit) {\n        this.setState({isEditable: edit})\n        console.log(`General component is editable? ${this.state.isEditable}`)\n    }\n\n    render() {\n      return (\n          <div className=\"General\" id=\"General\">\n            <h1>General Information</h1>\n            <p>Use this section to include your name and contact information.</p>\n            <Edit \n                current={this.state.isEditable}\n                toggle={this.handleChange} />\n            <form>\n                <fieldset className=\"container\">\n                    <Text \n                        display={\"block\"}\n                        length={\"250\"}\n                        placeholder={\"First and last name\"}\n                        type={\"text\"}\n                        label={\"Name\"}\n                        editable={this.state.isEditable} />\n                    <Email\n                        display={\"block\"}\n                        placeholder={\"Email address\"}\n                        label={\"Email\"}\n                        editable={this.state.isEditable} />\n                    <Phone \n                        label={\"Phone\"}\n                        display={\"inline\"}\n                        editable={this.state.isEditable} />\n                </fieldset>\n            </form>\n          </div>\n        );\n      }\n    }\n  \n  export default General;","import React from 'react'\n\nclass DateRange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monthStartValue: \"\",\n            yearStartValue: \"\",\n            monthEndValue: \"\",\n            yearEndValue: \"\",\n            current: false,\n            valid: true,\n        };\n        this.handleMonthStartChange = this.handleMonthStartChange.bind(this);\n        this.handleYearStartChange = this.handleYearStartChange.bind(this);\n        this.handleMonthEndChange = this.handleMonthEndChange.bind(this);\n        this.handleYearEndChange = this.handleYearEndChange.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n    }\n    handleMonthStartChange(e) {\n        this.setState({monthStartValue: (e.target.value)});\n        this.validate(e.target.value, this.state.yearStartValue, this.state.monthEndValue, this.state.yearEndValue);\n    }\n    handleYearStartChange(e) {\n        this.setState({yearStartValue: (e.target.value)});\n        this.validate(this.state.monthStartValue, e.target.value, this.state.monthEndValue, this.state.yearEndValue);\n    }\n    handleMonthEndChange(e) {\n        this.setState({monthEndValue: (e.target.value)});\n        this.validate(this.state.monthStartValue, this.state.yearStartValue, e.target.value, this.state.yearEndValue);\n    }\n    handleYearEndChange(e) {\n        this.setState({yearEndValue: (e.target.value)});\n        this.validate(this.state.monthStartValue, this.state.yearStartValue, this.state.monthEndValue, e.target.value);\n    }\n    handleCheck(e) {\n        if (e.target.checked) {\n            this.setState({current: true});\n        } else {\n            this.setState({current: false});\n        }\n    }\n    validate(startMonth, startYear, endMonth, endYear) {\n        console.log(\"you called validate\");\n        const formatYear = /(19|20)\\d\\d/;\n        const validStart = formatYear.test(startYear);\n        const validEnd = formatYear.test(endYear);\n        if (startYear === \"\" || endYear === \"\") {\n            return;\n        }\n        if (endYear === startYear && validStart && validEnd) {\n            const startDate = new Date(`${startMonth}, ${startYear}`);\n            const endDate = new Date(`${endMonth}, ${endYear}`);\n            console.log(startDate, endDate);\n            if (startDate.getMonth() <= endDate.getMonth()) {\n                console.log(\"start month is less than end month\");\n                this.setState({valid: true})\n            } else {\n                console.log(\"start month is greater than end month\");\n                this.setState({valid: false})\n            }\n        }\n        else if (endYear >= startYear && validStart && validEnd) {\n            this.setState({valid: true});\n        } else {\n            this.setState({valid: false});\n        }\n    }\n\n    render() {\n        const editable = this.props.editable; //true or false\n        const label = this.props.label;\n        const monthStart = this.state.monthStartValue;\n        const yearStart = this.state.yearStartValue;\n        const monthEnd = this.state.monthEndValue;\n        const yearEnd = this.state.yearEndValue;\n        const valid = this.state.valid;\n        const current = this.state.current;\n        const monthEl = <span className=\"italic\">Month</span>;\n        const yearEl = <span className=\"italic\">Year</span>;\n        if (editable) {\n            return (\n               <div className=\"DateRange editable\">\n                   <label>{label}</label>\n                   <fieldset id=\"rangeStart\">\n                       <p>Start date</p>\n                        <select value={monthStart} onChange={this.handleMonthStartChange}>\n                            <option value=\"Month\" defaultValue>Month</option>\n                            <option value=\"January\">January</option>\n                            <option value=\"February\">February</option>\n                            <option value=\"March\">March</option>\n                            <option value=\"April\">April</option>\n                            <option value=\"May\">May</option>\n                            <option value=\"June\">June</option>\n                            <option value=\"July\">July</option>\n                            <option value=\"August\">August</option>\n                            <option value=\"September\">September</option>\n                            <option value=\"October\">October</option>\n                            <option value=\"November\">November</option>\n                            <option value=\"December\">December</option>\n                        </select>\n                        <input type=\"number\" min=\"1935\" max=\"2020\" placeholder=\"Year\" onChange={this.handleYearStartChange} value={yearStart}></input>\n                    </fieldset>\n                    <fieldset id=\"rangeEnd\">\n                        <p>End date</p>\n                        <select value={monthEnd} onChange={this.handleMonthEndChange}>\n                            <option value=\"Month\" defaultValue>Month</option>\n                            <option value=\"January\">January</option>\n                            <option value=\"February\">February</option>\n                            <option value=\"March\">March</option>\n                            <option value=\"April\">April</option>\n                            <option value=\"May\">May</option>\n                            <option value=\"June\">June</option>\n                            <option value=\"July\">July</option>\n                            <option value=\"August\">August</option>\n                            <option value=\"September\">September</option>\n                            <option value=\"October\">October</option>\n                            <option value=\"November\">November</option>\n                            <option value=\"December\">December</option>\n                        </select>\n                        <input type=\"number\" min=\"1935\" max=\"2020\" placeholder=\"Year\" onChange={this.handleYearEndChange} value={yearEnd}></input>\n                        <input className=\"currentCheck\" type=\"checkbox\" checked={current} onChange={this.handleCheck}></input>\n                        <p className=\"inline\">Current</p>\n                    </fieldset>\n                    <div className=\"error\">{valid ? \"\" : \"Enter a valid date range\"}</div>\n               </div> \n            );\n        } else {\n            if (current) {\n                return (\n                    <div className=\"DateRange notEditable\">\n                        <label>{label}</label>\n                        <p className=\"inline month\">{monthStart ? monthStart : monthEl}</p>\n                        <p className=\"inline\">{yearStart ? yearStart : yearEl}</p>\n                        <div className=\"arrow\"></div>\n                        <p className=\"inline\">Current</p>\n                    </div>\n                 );\n            } else {\n                return (\n                    <div className=\"DateRange notEditable\">\n                        <label>{label}</label>\n                        <p className=\"inline month\">{monthStart ? monthStart : monthEl}</p>\n                        <p className=\"inline\">{yearStart ? yearStart : yearEl}</p>\n                        <div className=\"arrow\"></div>\n                        <p className=\"inline month\">{monthEnd ? monthEnd : monthEl}</p>\n                        <p className=\"inline\">{yearEnd ? yearEnd : yearEl}</p>\n                    </div>\n                 );\n            }\n        }\n    }\n}\n\nexport default DateRange;","import React from 'react'\nimport Text from './Text'\nimport DateRange from './DateRange'\n\nclass EducationForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.remove = this.remove.bind(this);\n    }\n\n    remove(e) {\n        const key = this.props.uuid;\n        e.preventDefault();\n        this.props.remove(key);\n    }\n\n    render() {\n        const key = (this.props.uuid) > 0;\n        const removeButton = <button onClick={this.remove}>Remove</button>;\n        return (\n            <fieldset className=\"container\">\n                <span className=\"removeButton\">{key ? removeButton : \"\"}</span>\n                <Text \n                    display={\"block\"}\n                    length={\"250\"}\n                    placeholder={\"Institution\"}\n                    type={\"text\"}\n                    label={\"Institution\"}\n                    editable={this.props.isEditable} />\n                <Text \n                    display={\"block\"}\n                    length={\"250\"}\n                    placeholder={\"Course of study\"}\n                    type={\"text\"}\n                    label={\"Course of study\"}\n                    editable={this.props.isEditable} />\n                <DateRange \n                    label={\"Dates of attendance\"}\n                    editable={this.props.isEditable} />\n            </fieldset>\n        );\n    }\n}\n\nexport default EducationForm;","import React from 'react'\nimport Edit from './Edit'\nimport EducationForm from './EducationForm'\n\nclass Education extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.addNew = this.addNew.bind(this);\n        this.remove = this.remove.bind(this);\n        this.state = {\n            isEditable: true,\n            addedSections: [0], \n        }\n    }\n\n    handleChange(edit) {\n        this.setState({isEditable: edit})\n        console.log(`Education component is editable? ${this.state.isEditable}`)\n    }\n\n    addNew() {\n        const length = this.state.addedSections.length;\n        const next = length;\n        this.setState({addedSections: [...this.state.addedSections, next]})\n    }\n\n    remove(key) {\n        const addedSections = this.state.addedSections;\n        const update = addedSections.filter((section) => section.toString() !== key);\n        this.setState({addedSections: update})\n    }\n\n    render() {\n        const fieldsets = this.state.addedSections.map((index) =>\n            <EducationForm key={index.toString()} uuid={index.toString()} remove={this.remove} isEditable={this.state.isEditable} />\n        );\n        const addButton = <button onClick={this.addNew}>Add</button>\n      return (\n          <div className=\"Education\">\n            <h1>Education</h1>\n            <p>Here you can enter where you've studied. Start with the most recent.</p>\n            <div className=\"buttons\">\n                <span className=\"addButton\">{this.state.isEditable ? addButton : \"\"}</span>\n                <Edit \n                    current={this.state.isEditable}\n                    toggle={this.handleChange} />\n            </div>\n            <form>\n                {fieldsets}\n            </form>\n          </div>\n        );\n      }\n    }\n  \n  export default Education;","import React from 'react'\nimport Text from './Text'\nimport DateRange from './DateRange'\n\nclass PracticalForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.remove = this.remove.bind(this);\n    }\n\n    remove(e) {\n        const key = this.props.uuid;\n        e.preventDefault();\n        this.props.remove(key);\n    }\n\n    render() {\n        const key = (this.props.uuid) > 0;\n        const removeButton = <button onClick={this.remove}>Remove</button>;\n        return (\n            <fieldset className=\"container\">\n                <span className=\"removeButton\">{key ? removeButton : \"\"}</span>\n                <Text \n                    display={\"block\"}\n                    length={\"250\"}\n                    placeholder={\"Employer\"}\n                    label={\"Employer\"}\n                    type={\"text\"}\n                    editable={this.props.isEditable} />\n                <Text\n                    display={\"block\"}\n                    length={\"250\"}\n                    placeholder={\"Position title\"}\n                    label={\"Position\"}\n                    type={\"text\"}\n                    editable={this.props.isEditable} />\n                <DateRange \n                    label={\"Dates of employment\"}\n                    editable={this.props.isEditable} />\n                <Text\n                    display={\"block\"}\n                    length={\"500\"}\n                    placeholder={\"Role description\"}\n                    label={\"Role Description\"}\n                    type={\"textarea\"}\n                    cols={\"50\"}\n                    rows={\"5\"}\n                    editable={this.props.isEditable} />\n            </fieldset>\n        );\n    }\n}\n\nexport default PracticalForm;","import React from 'react'\nimport Edit from './Edit'\nimport PracticalForm from './PracticalForm'\n\nclass Practical extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.addNew = this.addNew.bind(this);\n        this.remove = this.remove.bind(this);\n        this.state = {\n            isEditable: true,\n            addedSections: [0], \n        }\n    }\n\n    handleChange(edit) {\n        this.setState({isEditable: edit})\n    }\n\n    addNew() {\n        const length = this.state.addedSections.length;\n        const next = length;\n        this.setState({addedSections: [...this.state.addedSections, next]})\n    }\n\n    remove(key) {\n        const addedSections = this.state.addedSections;\n        const update = addedSections.filter((section) => section.toString() !== key);\n        this.setState({addedSections: update})\n    }\n\n    render() {\n        const fieldsets = this.state.addedSections.map((index) =>\n            <PracticalForm key={index.toString()} uuid={index.toString()} remove={this.remove} isEditable={this.state.isEditable} />\n        );\n        const addButton = <button onClick={this.addNew}>Add</button>\n        return (\n            <div className=\"Practical\">\n                <h1>Practical Experience</h1>\n                <p>List your past employers, and describe what you did in each role.</p>\n                <div className=\"buttons\">\n                    <span className=\"addButton\">{this.state.isEditable ? addButton : \"\"}</span>\n                    <Edit \n                        current={this.state.isEditable}\n                        toggle={this.handleChange} />\n                </div>\n                <form className=\"generatedForm\">\n                    {fieldsets}\n                </form>\n            </div>\n            );\n        }\n    }\n  \n  export default Practical;","import General from './Components/General'\nimport './App.css'\nimport Education from './Components/Education'\nimport Practical from './Components/Practical'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <General />\n      <Education />\n      <Practical />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}